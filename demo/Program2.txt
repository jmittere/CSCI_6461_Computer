LOC 900        ;SENTENCES
Data 105 ; i
Data 32   
Data 114 ; r
Data 117 ; u
Data 110 ; n
Data 46  ; .
Data 105 ; i
Data 32 
Data 101 ; e
Data 97  ; a
Data 116 ; t
Data 46  ; .
Data 105 ; i
Data 32  ;
Data 103 ; g
Data 111 ; o
Data 46  ; .
Data 105 ; i
Data 32 
Data 97  ; a 
Data 109 ; m 
Data 46  ; .
Data 105 ; i
Data 32 
Data 100 ; d
Data 111 ; o
Data 46  ; .
Data 105 ; i
Data 32  
Data 116 ; t
Data 114 ; r
Data 121 ; y
Data 46  ; .
LOC 8   ;GET USER INPUT WORD
Data 150
LDX 1,8  ; Load IXR1 with 150
LDR 3,0,8 ;Load GPR3 with 150
IN 0,0  ;Load GPR0 with character from user
STR 0,0,7 ;Store character at 7
SIR 0,31
SIR 0,5  ;subtract 36 "$" character
JNE 0,0,19  ;jump over nextinst if not $
LDR 0,0,7 ;Load '$' character back into GPR0
STR 0,1,0  ;Store the '$' character in IXR1 address to show where user word ends
JMA 0,25 ; jump down out of loop to start searching for the word in the sentences
LDR 0,0,7 ;@19 Load character back into GPR0
STR 0,1,0  ;Store the character in IXR1 address
AIR 3,1  ;Increment GPR3 by 1 
STR 3,0,8 ;Store the location of where to put the next character in memory @ 8
LDX 1,8 ;Load index reg with new location
JMA 0,11  ;jump back to character input and beginning of loop again
Data 500  ;@25 SETTING UP MEMORY and INDEX REGISTERS
LDX 3,25 ;load IXR3 with location of variables in memory
Data 33 
LDX 2,27 ;@28 load IXR2 with location of else statement
Data 71
LDX 1,29 ;@30 load IXR1 with location of CHECKPERIODENDOFSENTENCE
LOC 500
Data 1 ;used for when a 1 is needed @ address 0 off of 500
Data 1 ;sentenceNumberOfCurrentWord stored @ address 1 off of 500
Data 1 ;wordNumberInSentence stored @ address 2 off of 500
Data 150 ;startAddressOfUserCharacters @ address 3 off of 500
Data 900 ;startAddressOfSentenceCharacters @ address 4 off of 500, will be overwritten if sentence word doesnt match
Data 150 ;addressOfNextUserCharacter stored @ address 5 off of 500
Data 900 ;addressOfNextSentenceCharacter stored @ address 6 off of 500
Data 1 ;currentWordMatchFlag, 2 doesnt match, 1 matches @ address 7 off of 500
Data 300 ;address of INCREMENT section stored @ address 8 off of 500 
Data 400 ;address of PRINTOUT section stored @ address 9 off of 500
Data 10 ;OFFSET1 stored @ address 10 off 500
Data 55 ;CHECKPERIOD$ stored @ address 11 off 500
Data 43 ;OFFSET3 stored @ address 12 off 500
Data 63 ;INCREMENTSENTENCENUM stored @ address 13 off 500
Data 66 ;NONPERIODELSE stored @ address 14 off 500
Data 73 ;STARTOFMAINELSE stored @ address 15 off 500
Data 77 ;SETCURRWORDMATCHFLAG stored @ address 16 off 500
Data 80 ;CHECKSPACEENDOFSENTENCE stored @ address 17 off 500
Data 93 ;CHECKPERIODENDOFSENTENCE stored @ address 18 off 500
Data 106 ;LASTINCREMENT stored @ address 19 off 500
Data 406 ;TOPOFLOOPINPRINTOUT stored @ address 20 off 500
Data 412 ;INCREMENTUSERCHARACTERINPRINTOUT stored @ address 21 off 500
Data 416 ;FINALHLT stored @ address 22 off 500
LOC 31   ;MAINLOGIC
LDR 0,3,5,1 ;load nextUserCharacter into GPR0 with indirect bit
SIR 0,31
SIR 0,5
JNE 0,3,15,1 ;@34,Jump to STARTOFMAINELSE @73, if GPR0 == 0 ; '$' char in user word,end of word
LDR 0,3,6,1 ; load nextSentenceChar
SIR 0,31
SIR 0,1 ;subtract 32 to see if its a space
JNE 0,3,11,1   ;@38,Jump to CHECKPERIOD$ @55, if nextSentenceChar is a space
LDR 0,3,7  ;load currentWordMatchFlag to check if its 1
SIR 0,1 
JNE 0,3,12 ; jump to OFFSET3, if currentWordMatchFlag == 1
JMA 3,9,1 ;jump to PRINTOUT, jump to address stored @ 9 off of 500
LDR 0,3,2 ;@43,OFFSET3, load wordNumberInSentence
AIR 0,1 ;increment wordNumberInSentence because we just saw a space
STR 0,3,2 ;store wordNumberInSentence
LDR 0,3,0 ;load 1 into GPR0, start of else
STR 0,3,7 ;set currentWordMatchFlag to 1 because we have a period
LDR 0,3,6 ; load addressOfNextSentenceCharacter 
AIR 0,1 ;increment by 1 to skip to next
STR 0,3,4 ; update startAddressOfSentenceCharacters
LDR 0,3,3 ; load startAddressOfUserCharacters
SIR 0,1 ;subtract 1 so that when it is incremented, its the same
STR 0,3,5 ;reset addressOfNextUserCharacter 
JMA 3,8,1 ;jump to INCREMENT, jump to address stored @ 8 off of 500
LDR 0,3,6,1 ;@55,CHECKPERIOD$, load nextSentenceChar
SIR 0,31 
SIR 0,15 ;subtract 46 to see if its a period
JNE 0,3,14,1 ;@58, jump to NONPERIODELSE @ 66, if nextSentenceChar is a '.'
LDR 0,3,7  ;load currentWordMatchFlag to check if its 1
SIR 0,1 
JNE 0,3,13,1 ; jump to INCREMENTSENTENCENUM @63, if currentWordMatchFlag == 1
JMA 3,9,1 ;jump to PRINTOUT, jump to address stored @ 9 off of 500
LDR 0,3,1 ;@63,INCREMENTSENTENCENUM, load sentenceNumberOfCurrentWord
AIR 0,1 ;increment sentenceNumberOfCurrentWord
STR 0,3,1 ;store sentenceNumberOfCurrentWord
LDR 0,3,0 ;@66,NONPERIODELSE, load 1 into GPR0
STR 0,3,7 ;set currentWordMatchFlag to 1 because we have a period
STR 0,3,2 ;set wordNumberInSentence to 1 in memory
LDR 0,3,3 ; load startAddressOfUserCharacters
SIR 0,1 ;subtract 1 so that when it is incremented, its the same
STR 0,3,5 ;reset addressOfNextUserCharacter 
JMA 3,8,1 ;jump to INCREMENT, jump to address stored @ 8 off of 500
LDR 0,3,5,1 ;@73, STARTOFMAINELSE, load nextUserCharacter into GPR0 
SMR 0,3,6,1 ;subtract nextSentenceChar from nextUserCharacter
JNE 0,3,16,1 ; if equal jump to INCREMENT, but if nextUserCharacter != nextSentenceChar, jump to SETCURRWORDMATCHFLAG @ 77
JMA 3,8,1 ;jump to INCREMENT, jump to address stored @ 8 off of 500
LDR 1,3,0 ;@77, SETCURRWORDMATCHFLAG, load 1 into GPR1
AIR 1,1
STR 1,3,7 ;set currentWordMatchFlag to 2 because they arent equal
LDR 0,3,6,1 ;@80, CHECKSPACEENDOFSENTENCE, load nextSentenceChar
SIR 0,31
SIR 0,1 ;subtract 32 to see if its a space
JNE 0,3,18,1 ;jump over next 9 instructions to CHECKPERIODENDOFSENTENCE @ 93 because not a space, if nextSentenceChar == " "
LDR 0,3,2 ; load wordNumberInSentence
AIR 0,1 ;increment wordNumberInSentence because we just saw a space
STR 0,3,2 ;store wordNumberInSentence
LDR 1,3,0 ;load 1 into GPR1
STR 1,3,7 ;set currentWordMatchFlag to 1 because new word in sentence
LDR 0,3,3 ; load startAddressOfUserCharacters
SIR 0,1 ;subtract 1 so that when it is incremented, its the same
STR 0,3,5 ;reset addressOfNextUserCharacter 
JMA 3,8,1 ;jump to INCREMENT, jump to address stored @ 8 off of 500
LDR 0,3,6,1 ;@93, CHECKPERIODENDOFSENTENCE, load nextSentenceChar
SIR 0,31 
SIR 0,15 ;subtract 46 to see if its a period
JNE 0,3,19,1 ; skip next 9 inst to INCREMENT @ 106, if nextSentenceChar is a '.'
LDR 0,3,1 ;load sentenceNumberOfCurrentWord
AIR 0,1 ;increment sentenceNumberOfCurrentWord
STR 0,3,1 ;store sentenceNumberOfCurrentWord because we have a period
LDR 0,3,0 ;load 1 into GPR0
STR 0,3,2 ;set wordNumberInSentence to 1 in memory
STR 0,3,7 ;set currentWordMatchFlag to 1 because new sentence
LDR 0,3,3 ; load startAddressOfUserCharacters
SIR 0,1 ;subtract 1 so that when it is incremented, its the same
STR 0,3,5 ;reset addressOfNextUserCharacter 
JMA 3,8,1 ;@106, LASTINCREMENT, jump to INCREMENT, jump to address stored @ 8 off of 500
LOC 300     ;INCREMENT
LDR 0,3,5 ;load address of nextUserCharacter
AIR 0,1 ;add 1 to address for nextUserCharacter
STR 0,3,5 ;store address of nextUserCharacter
LDR 0,3,6 ;load address of nextSentenceChar
AIR 0,1 ;add 1 to address for nextSentenceChar
STR 0,3,6 ;store address of nextSentenceChar
JMA 0,31 ;jump to MAINLOGIC
LOC 400     ;PRINTOUT
LDR 0,3,1 ;@400, load sentenceNumberOfCurrentWord
OUT 0,1   ;OUTPUT sentenceNumberOfCurrentWord
LDR 0,3,2 ;load wordNumberInSentence
OUT 0,1  ;OUTPUT wordNumberInSentence
LDR 0,3,3 ;load startAddressOfUserCharacters
STR 0,3,5 ;store for addressOfNextUserCharacter
LDR 0,3,5,1 ;@406, TOPOFLOOPINPRINTOUT, use addressOfNextUserCharacter to load usercharacter
OUT 0,1 ;output usercharacter
SIR 0,31
SIR 0,5 ;subtract 36 to see if its '$' character
JNE 0,3,21,1  ;jump over next instruction to INCREMENTUSERCHARACTERINPRINTOUT @412 if no more characters to printout
JMA 3,22,1 ;jump to FINALHLT 
LDR 0,3,5 ;@412, INCREMENTUSERCHARACTERINPRINTOUT load addressOfNextUserCharacter
AIR 0,1 
STR 0,3,5 ;increment addressOfNextUserCharacter to next character for printout
JMA 3,20,1 ;jump to TOPOFLOOPINPRINTOUT 
HLT ;@416,FINALHLT


